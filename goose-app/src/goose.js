// Goose.js
import React, { useRef } from 'react';
import { useSpring, animated, easings } from '@react-spring/web';

const honkFiles = [
  'assets/honks/sfx_goose_honk_b_01.wav',
  'assets/honks/sfx_goose_honk_b_02.wav',
  'assets/honks/sfx_goose_honk_b_03.wav',
  'assets/honks/sfx_goose_honk_b_05.wav',
  'assets/honks/sfx_goose_honk_b_06.wav',
  'assets/honks/sfx_goose_honk_glass_02.wav',
  'assets/honks/sfx_goose_honk_glass_03.wav',
  'assets/honks/sfx_goose_honk_glass_04.wav',
  'assets/honks/sfx_goose_honk_glass_05.wav',
  'assets/honks/sfx_goose_honk_harmonica_01.wav',
  'assets/honks/sfx_goose_honk_harmonica_02.wav',
  'assets/honks/sfx_goose_honk_harmonica_03.wav',
  'assets/honks/sfx_goose_honk_harmonica_04.wav',
  'assets/honks/sfx_goose_honk_harmonica_05.wav',
  'assets/honks/sfx_goose_honk_harmonica_06.wav',
  'assets/honks/sfx_goose_honk_pylon_01.wav',
  'assets/honks/sfx_goose_honk_pylon_02.wav',
  'assets/honks/sfx_goose_honk_pylon_03.wav',
  'assets/honks/sfx_goose_honk_pylon_04.wav',
  'assets/honks/sfx_goose_honk_pylon_05.wav',
  'assets/honks/sfx_goose_honk_pylon_06.wav',
  'assets/honks/sfx_goose_honk_pylon_07.wav',
  'assets/honks/sfx_goose_honk_soap_01.wav',
  'assets/honks/sfx_goose_honk_soap_02.wav',
  'assets/honks/sfx_goose_honk_soap_03.wav',
  'assets/honks/sfx_goose_honk_soap_04.wav',
  'assets/honks/sfx_goose_honk_trashlid_01.wav',
  'assets/honks/sfx_goose_honk_trashlid_02.wav',
  'assets/honks/sfx_goose_honk_trashlid_03.wav',
  'assets/honks/sfx_goose_honk_trashlid_04.wav',
  'assets/honks/sfx_goose_honk_trashlid_05.wav',
  'assets/honks/sfx_goose_honk_walkie_talkie_03.wav',
  'assets/honks/sfx_goose_honk_walkie_talkie_04.wav',
  'assets/honks/sfx_goose_honk_walkie_talkie_06.wav'
];


export default function Goose() {
  const isJumping = useRef(false);
  const [spring, api] = useSpring(() => ({
    x: 0,
    config: { mass: 5, tension: 90, friction: 30 },
  }));

  const handleMouseEnter = () => {
    if (isJumping.current) return;
    isJumping.current = true;

    // Play random honk
    const randomHonk = honkFiles[Math.floor(Math.random() * honkFiles.length)];
    const audio = new window.Audio(randomHonk);
    audio.play();

    // Animate jump using a mapped spring value for a weighty, fluid motion
    api.start({
      from: { x: 0 },
      to: { x: 1 },
      config: { mass: 5, tension: 90, friction: 30 },
      reset: true,
      onRest: () => { isJumping.current = false; }
    });
  };

  // Map the spring value to a custom jump curve (in px)
  const jumpY = spring.x.to({
    range: [0, 0.1, 0.15, 0.2, 0.25, 0.35, 0.45, 0.55, 0.65, 0.75, 0.8, 0.85, 0.9, 1],
    output: [0, 0, -20, -30, -30, -30, -30, -29, -28, -27, 0],
  });

  return (
    <animated.svg
      style={{ transform: jumpY.to(y => `translateY(${y}px)`), cursor: 'pointer' }}
      width="361"
      height="402"
      viewBox="0 0 361 402"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      onMouseEnter={handleMouseEnter}
    >
      <path
        d="M284.253 401.5C288.528 400.143 290.975 396.366 290.621 391.675C290.297 387.545 288.587 385.863 283.781 384.978C282.307 384.712 279.742 384.211 278.032 383.886C276.322 383.561 274.228 383.178 273.373 383.001C272.548 382.853 271.103 382.617 270.218 382.44C269.334 382.293 267.86 382.027 266.975 381.85C266.091 381.703 264.616 381.437 263.732 381.26C259.899 380.552 258.867 380.375 256.214 379.932C248.666 378.693 248.047 378.546 244.125 377.365C240.292 376.185 239.467 375.861 235.546 374.002C231.624 372.114 232.007 372.881 230.858 364.295C230.533 361.875 230.15 358.955 230.003 357.804C229.826 356.683 229.56 354.352 229.383 352.641C229.207 350.929 228.941 348.598 228.764 347.418C228.587 346.238 228.44 344.32 228.41 343.14C228.381 341.193 228.499 340.75 229.501 338.685C230.209 337.239 231.3 335.705 232.45 334.495C234.248 332.607 234.278 332.607 239.909 330.365C263.467 321.13 283.25 309.269 299.643 294.575C315.27 280.561 326.296 263.359 330.336 246.719C331.81 240.611 332.282 236.156 332.282 228.308C332.282 217.745 331.102 210.517 327.682 200.013C323.407 186.913 317.186 173.783 308.105 158.795C306.631 156.346 296.577 140.414 293.334 135.339C280.891 115.984 274.729 104.565 271.781 95.5075C271.073 93.2947 270.366 89.6656 270.366 88.2199C270.366 85.1514 272.607 79.87 275.142 77.0081C275.968 76.0639 276.587 75.7394 279.063 74.9723C283.958 73.4675 287.702 72.3759 291.742 71.3137C293.835 70.7826 296.636 70.045 297.933 69.6909C300.292 69.0713 300.41 69.0714 328.803 69.1599C357.284 69.2484 357.284 69.2484 358.552 68.3632C360.527 66.9765 361.028 65.8553 360.999 63.0229C360.969 58.8037 359.407 56.5614 354.365 53.6404C346.08 48.8607 341.54 46.0282 326.237 36.0851C318.631 31.1284 313.058 27.2928 310.788 25.4635C310.08 24.8734 307.604 22.218 305.275 19.533C298.022 11.0947 293.835 7.49514 287.938 4.63319C280.685 1.12213 275.466 0.000953775 266.091 0.000953775C258.484 -0.0285509 254.474 0.620559 248.253 2.7744C235.752 7.17059 225.433 16.5826 218.681 29.7712C211.782 43.2843 209.187 59.1873 210.661 78.8374C210.897 81.9944 211.162 85.0629 211.221 85.6235C211.31 86.184 211.516 87.9248 211.693 89.4591C212.106 92.9111 213.108 100.022 213.462 101.999C213.61 102.825 213.875 104.329 214.052 105.392C214.465 107.781 214.789 109.522 215.202 111.588C215.379 112.473 215.85 114.863 216.263 116.898C216.646 118.934 217.266 121.855 217.59 123.389C218.327 126.871 219.359 131.474 219.654 132.831C219.772 133.391 220.037 134.542 220.214 135.339C220.391 136.165 220.804 138.083 221.128 139.617C222.425 145.459 222.926 148.055 223.339 150.357C224.194 155.49 224.194 155.225 223.015 157.556C221.718 160.182 219.772 162.188 217.413 163.339C215.791 164.165 215.349 164.224 210.661 164.43C199.664 164.932 189.492 166.23 180.44 168.236C179.88 168.354 178.73 168.62 177.934 168.797C158.505 172.957 133.355 183.667 109.974 197.682C95.1145 206.622 84.5888 213.703 69.8764 224.708C47.4098 241.526 41.69 244.978 26.1226 251.204C21.2578 253.151 11.5871 256.367 6.98761 257.606C2.50607 258.816 1.82797 259.111 0.913971 260.143C0.0884399 261.117 -3.05176e-05 261.383 -3.05176e-05 263.271C-3.05176e-05 264.51 0.17688 265.661 0.44223 266.162C1.12036 267.49 5.04169 270.706 9.87704 273.922C14.7124 277.109 22.3192 281.8 27.4199 284.78C28.6287 285.488 30.2208 286.432 30.9579 286.875C33.0512 288.143 41.6015 292.805 46.201 295.165C49.857 297.054 50.7415 297.673 53.4245 300.152C66.5742 312.426 78.1908 320.835 89.6895 326.381C99.7434 331.22 108.5 334.082 121.473 336.797C123.36 337.18 123.389 337.21 123.478 338.213C123.507 338.773 123.743 340.485 123.979 342.019C124.48 345.264 125.453 353.319 125.896 357.361C126.043 358.896 126.367 362.23 126.633 364.737C126.868 367.245 127.222 370.609 127.37 372.202C127.547 373.795 127.665 376.333 127.665 377.867C127.665 389.226 132.176 397.104 140.637 400.438C144.293 401.884 144.913 401.913 171.477 401.913C195.389 401.913 196.421 401.884 197.482 401.353C199.9 400.114 200.784 398.343 200.784 394.773C200.784 391.085 199.487 388.784 196.627 387.309C195.801 386.866 177.875 382.234 168.205 379.932C166.406 379.49 164.106 378.959 163.045 378.723C161.984 378.487 160.598 378.133 159.949 377.956C158.357 377.513 153.286 375.064 151.193 373.766C149.571 372.704 149.541 372.674 149.365 370.992C149.011 367.924 148.627 362.318 148.274 355.384C147.92 348.569 147.92 348.569 148.834 346.622C149.424 345.353 150.396 344.025 151.605 342.786C153.463 340.898 153.463 340.898 161.423 340.721C174.514 340.396 190.023 339.068 200.371 337.446C201.167 337.298 201.315 337.387 201.462 337.947C201.551 338.331 202.199 340.691 202.936 343.199C203.674 345.707 204.617 349.041 205.03 350.575C205.413 352.109 205.973 354.175 206.239 355.148C208.361 362.967 211.015 374.592 211.693 379.195C212.725 386.246 214.494 390.406 217.973 394.154C221.806 398.255 226.612 400.556 233.511 401.618C236.342 402.061 282.867 401.943 284.253 401.5ZM270.218 29.6531C270.218 26.8207 272.489 24.5193 275.349 24.5193C278.179 24.5193 280.479 26.8207 280.479 29.6531C280.479 32.5151 278.179 34.8164 275.349 34.8164C272.489 34.8164 270.218 32.5151 270.218 29.6531Z"
        fill="black"
      />
    </animated.svg>
  );
}